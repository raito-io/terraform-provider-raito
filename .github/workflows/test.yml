# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod tidy
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          skip-cache: false
          skip-pkg-cache: true
          skip-build-cache: true

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod tidy
      - run: terraform --version
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs:
      - build
      - generate
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.6.*'
          - '1.7.*'
          - '1.8.*'
          - '1.9.*'
          - '1.10.*'
          - '1.11.*'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          TF_VAR_raito_user: ${{ secrets.RAITO_USER }}
          TF_VAR_raito_secret: ${{ secrets.RAITO_SECRET }}
        run: go test -v -cover ./internal/
        timeout-minutes: 10